# Generated by Django 3.2 on 2025-09-18 13:59

import datetime
from django.db import migrations, models
import django.db.models.deletion
import lpg_station.functions
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BasePricing',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=120, unique=True)),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=9)),
                ('active', models.BooleanField(default=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Configurations',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120, unique=True)),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=9)),
                ('active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Container',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=120, unique=True)),
                ('site_id', models.CharField(default=lpg_station.functions.gen64Id, max_length=90)),
                ('location', models.CharField(max_length=100)),
                ('added_date', models.DateTimeField(auto_now=True)),
                ('active', models.BooleanField(default=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=120)),
                ('phone', models.CharField(max_length=32)),
                ('address', models.CharField(blank=True, max_length=255)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Cylinder',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('qr_code', models.ImageField(blank=True, upload_to='qr/')),
                ('status', models.CharField(choices=[('full', 'Full'), ('empty', 'Empty'), ('in_use', 'In-Use'), ('with_customer', 'With Customer'), ('maintenance', 'Maintenance'), ('retired', 'Retired')], default='full', max_length=20)),
                ('assigned_state', models.CharField(default=0, max_length=3)),
                ('location', models.CharField(blank=True, max_length=120)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CylinderEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('event_type', models.CharField(choices=[('create', 'Created'), ('refill', 'Refill'), ('sale', 'Sold'), ('deliver', 'Delivered'), ('return', 'Returned'), ('maint', 'Maintenance'), ('status', 'Status')], max_length=12)),
                ('note', models.CharField(blank=True, max_length=255)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GRN',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('grn_Id', models.CharField(default=lpg_station.functions.gen32Id, max_length=80)),
                ('initia', models.CharField(max_length=70, null=True)),
                ('grn_number', models.CharField(max_length=90, unique=True)),
                ('made_date', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('status', models.CharField(default=0, max_length=3)),
            ],
        ),
        migrations.CreateModel(
            name='GRNItems',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_Id', models.CharField(max_length=100)),
                ('quantity', models.CharField(max_length=70, null=True)),
                ('added_date', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('status', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=120)),
                ('item_type', models.CharField(default=0, max_length=120)),
                ('size_kg', models.PositiveIntegerField(choices=[(6, '6kg'), (14, '14kg'), (40, '40kg'), (45, '45kg'), (48, '48kg'), (50, '50kg'), (60, '60kg')])),
                ('base_price', models.DecimalField(decimal_places=2, max_digits=9)),
                ('active', models.BooleanField(default=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ItemTypes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=120, unique=True)),
                ('active', models.BooleanField(default=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('assigned', 'Assigned'), ('delivered', 'Delivered'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('total_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=9)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('item_id', models.CharField(default=lpg_station.functions.gen64Id, max_length=90)),
                ('name', models.CharField(max_length=120, unique=True)),
                ('sku', models.TextField(max_length=90, null=True)),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=9)),
                ('stock', models.PositiveIntegerField(default=0)),
                ('item_pic', models.ImageField(blank=True, upload_to='items/')),
                ('status', models.CharField(default=0, max_length=3)),
                ('qr_code', models.ImageField(blank=True, upload_to='qr/products/')),
                ('active', models.BooleanField(default=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Refill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('customer', models.TextField(null=True)),
                ('quantity_kg', models.DecimalField(decimal_places=2, max_digits=10)),
                ('unit_price_per_kg', models.DecimalField(decimal_places=2, max_digits=8, null=True)),
                ('total_price', models.DecimalField(decimal_places=2, max_digits=10, null=True)),
                ('refill_id', models.CharField(default=lpg_station.functions.gen64Id, max_length=90)),
                ('address', models.TextField(null=True)),
                ('qrcode', models.TextField(null=True)),
                ('site_id', models.CharField(max_length=90, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Stations',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('site_id', models.CharField(default=lpg_station.functions.gen32Id, max_length=80)),
                ('initia', models.CharField(max_length=70, null=True)),
                ('station_name', models.CharField(max_length=120, null=True)),
                ('location', models.CharField(max_length=120, null=True)),
                ('made_date', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('status', models.CharField(default=0, max_length=3)),
            ],
        ),
        migrations.CreateModel(
            name='Sale',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=9)),
                ('total_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='sales', to='core.customer')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='sales', to='core.product')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]

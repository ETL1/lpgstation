# Generated by Django 3.2 on 2025-09-18 13:59

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import login.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('core', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address ')),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('is_admin', models.BooleanField(default=True)),
                ('is_member', models.BooleanField(default=False)),
                ('uid', models.CharField(default=login.models.genUid, max_length=100)),
                ('password', models.CharField(max_length=128, null=True)),
                ('access_level', models.CharField(default=0, max_length=6)),
                ('is_verified', models.BooleanField(default=True)),
                ('username', models.CharField(max_length=60, null=True)),
                ('title', models.CharField(max_length=60, null=True)),
                ('fname', models.CharField(max_length=60, null=True)),
                ('sname', models.CharField(max_length=60, null=True)),
                ('availability', models.TextField(null=True)),
                ('onlineStat', models.CharField(default=0, max_length=3)),
                ('lastOnline', models.CharField(max_length=60, null=True)),
                ('phone_num', models.CharField(max_length=60, null=True)),
                ('acc_token', models.CharField(max_length=60, null=True)),
                ('logi', models.CharField(max_length=60, null=True)),
                ('lati', models.CharField(max_length=60, null=True)),
                ('token', models.CharField(max_length=60, null=True)),
                ('u_pic', models.ImageField(default='userfiles/avatar.jpg', upload_to=login.models.upload_image, verbose_name='profile ')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('site_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='containers', to='core.container')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Instructor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('instructor_id', models.CharField(default=login.models.genUid, max_length=100)),
                ('expertise', models.TextField(help_text='Describe areas of expertise (e.g., Defensive Driving, Highway Driving).')),
                ('rating', models.DecimalField(decimal_places=2, default=0.0, help_text='Average instructor rating.', max_digits=3)),
                ('schedule', models.JSONField(default=login.models.default_schedule, help_text="Instructor's schedule in JSON format (e.g., available slots).")),
                ('bio', models.TextField(blank=True, help_text='A brief biography of the instructor.', null=True)),
                ('date_joined', models.DateField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='instructor_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('student_id', models.CharField(default=login.models.genUid, max_length=100)),
                ('goals', models.TextField(blank=True, help_text='Driving goals (e.g., getting a license).', null=True)),
                ('progress', models.JSONField(default=dict, help_text='Progress tracker (e.g., milestones completed).')),
                ('lessons_taken', models.PositiveIntegerField(default=0, help_text='Number of lessons attended.')),
                ('registration_date', models.DateField(auto_now_add=True)),
                ('feedback', models.TextField(blank=True, help_text='Feedback from instructors.', null=True)),
                ('assigned_instructor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='students', to='login.instructor')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Rating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating_value', models.IntegerField(help_text='Rating value between 1 and 5.', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('review', models.TextField(blank=True, help_text='Optional written review.', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('instructor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ratings', to='login.instructor')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ratings', to='login.student')),
            ],
        ),
    ]
